#!/usr/bin/env bash

DEPLOY_REPO=https://github.com/MediaComem/biosentiers-frontend.git
DEPLOY_REF=master

if [[ -z "$SSH_PORT" ]]; then SSH_PORT=22; fi
if [[ -z "$SSH_USER" ]]; then SSH_USER=biosentiers; fi

ROOT_DIR=/var/www/biosentiers/frontend

CACHE_DIR="${ROOT_DIR}/cache"
CURRENT_DIR="${ROOT_DIR}/current"
RELEASES_DIR="${ROOT_DIR}/releases"
REPO_DIR="${ROOT_DIR}/repo"
TMP_DIR="${ROOT_DIR}/tmp"

function usage() {
  echo 'deploy'
}

function version() {
  echo '1.0.0'
}

function run() {
  ssh -p $SSH_PORT "${SSH_USER}@${SSH_HOST}" $@
}

function setup() {
  run "mkdir -p $CACHE_DIR $RELEASES_DIR $TMP_DIR \
    && cd $ROOT_DIR \
    && test -d repo \
    || git clone --bare $DEPLOY_REPO repo"
}

function deploy() {
  local RELEASE=`date -u '+%Y%m%d%H%M%S'`
  local RELEASE_DIR="${RELEASES_DIR}/${RELEASE}"

  run "echo Deploying release ${RELEASE}... \
    && cd $ROOT_DIR \
    && mkdir -p tmp $RELEASE_DIR \
    && cd $REPO_DIR \
    && echo Fetching latest changes... \
    && git fetch origin '+refs/heads/*:refs/heads/*' \
    && echo Extracting source at version ${DEPLOY_REF}... \
    && git archive --output ${TMP_DIR}/release-${RELEASE}.tar $DEPLOY_REF \
    && tar -C ${RELEASE_DIR} -x --file ${TMP_DIR}/release-${RELEASE}.tar \
    && rm -f ${TMP_DIR}/release-*.tar \
    && echo Copying cache from previous build... \
    && test -f ${CACHE_DIR}/node_modules.tar.gz \
    && tar -xzf ${CACHE_DIR}/node_modules.tar.gz -C $RELEASE_DIR \
    || echo No build cache \
    && echo Installing dependencies... \
    && cd $RELEASE_DIR
    && PATH=\$HOME/.nodenv/shims:\$PATH npm install \
    && echo Caching node_modules for next build... \
    && rm -f ${CACHE_DIR}/node_modules.tar.gz \
    && tar -czf ${CACHE_DIR}/node_modules.tar.gz -C $RELEASE_DIR node_modules \
    && echo Building app... \
    && PATH=\$HOME/.nodenv/shims:\$PATH npm run build \
    && echo Linking current release... \
    && ln -fns $RELEASE_DIR $CURRENT_DIR"
}

while test $# -ne 0; do
  arg=$1; shift
  case $arg in
    -h|--help) usage; exit ;;
    -V|--version) version; exit ;;
    --host) SSH_HOST="$1"; shift ;;
    -p|--port) SSH_PORT="$1"; shift ;;
    -r|--ref) DEPLOY_REF="$1"; shift ;;
    -u|--user) SSH_USER="$1"; shift ;;
    deploy) deploy $@; exit ;;
    setup) setup $@; exit ;;
  esac
done
